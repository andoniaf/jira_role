---

- name: JIRA | Install | Ensure JIRA group
  group:
    name: "{{ jira_group }}"

- name: JIRA | Install | Ensure JIRA user
  user:
    name: "{{ jira_user }}"
    group: "{{ jira_group }}"
    shell: /bin/bash
    comment: "JIRA user to start application"
    home: "/var/lib/{{ jira_user }}"

- name: JIRA | Install | Create JIRA folders
  file:
    path: "{{ item }}"
    state: directory
    owner: "{{ jira_user }}"
    group: "{{ jira_group }}"
    mode: 0755
  with_items:
    - "{{ jira_home }}"
    - "{{ jira_download_dir }}"
    - "{{ jira_versions_dir }}"
    - "{{ jira_versions_dir }}/{{ jira_version }}"

- name: JIRA | Install | Download package
  get_url:
    dest: "{{ jira_download_dir }}/{{ jira_package }}"
    url: "{{ jira_installation_url }}"
    owner: "{{ jira_user }}"
    group: "{{ jira_group }}"
  register: jira_downloaded

- name: JIRA | Install | Unarchive package
  unarchive:
    src: "{{ jira_download_dir }}/{{ jira_package }}"
    dest: "{{ jira_versions_dir }}/{{ jira_version }}"
    remote_src: true
    extra_opts: --strip-components=1
    owner: "{{ jira_user }}"
    group: "{{ jira_group }}"
  when: jira_downloaded.changed  # noqa 503

- name: JIRA | Install | Check if JIRA service exists
  stat:
    path: "{{ jira_service }}"
  register: jira_service_status

- name: JIRA | Install | Stop JIRA if running
  service:
    name: "{{ jira_service_name }}"
    state: stopped
  when:
    - jira_service_status.stat.exists
    - jira_downloaded.changed  # noqa 503
  register: service_stopped

- name: JIRA | Install | Link latest version
  file:
    src: "{{ jira_versions_dir }}/{{ jira_version }}"
    dest: "{{ jira_installation_dir }}"
    owner: "{{ jira_user }}"
    group: "{{ jira_group }}"
    state: link
